
gauss = function(A, b){ # Se supone det(A) != 0
cont=0
n = nrow(A) # = ncol(A) para que sea cuadrada
# matriz ampliada
Ab = cbind(A,b)
# Eliminaci칩n
for (k in 1:(n-1)){ # desde columna k=1 hasta k=n-1
if(Ab[k,k]==0){ # intercambio de fila
fila = which(Ab[k, ]!=0)[1]
Ab[c(k, fila), ] = Ab[c(fila, k), ]
}
# Eliminaci칩n columna k
for (i in (k+1):n){# debajo de la diagonal
# Fi = Fi - a_ik/a_kk * Fk, i=k+1,...,n
Ab[i, ] = Ab[i, ] - Ab[i, k]/Ab[k,k]*Ab[k, ]
cont=cont+2
}
}
# Sustituci칩n hacia atr치s-------------------------
# b(i) = A[i, n+1]
cont2=0
x = rep(NA, times=n)
x[n] = Ab[n, n+1]/Ab[n,n] # xn = bn/a_nn
for(i in (n-1):1 ){
x[i]= (Ab[i, n+1] -sum(Ab[i, (i+1):n]*x[(i+1):n]) ) /Ab[i,i]

cont2=cont2+3
}
cat("numero de operaciones:", cont2+cont,'\n')
return(x)
}
#--- Pruebas
A = matrix(c( 2.6, 0.3, 2.4, 6.2,
7.7, 0.4, 4.7, 1.4,
5.1, 9.9, 9.5, 1.5,
6.0, 7.0, 8.5, 4.8), nrow=4, byrow=TRUE)

b = c(4,5,6,0)
C = matrix(c( 2.6, 0.3, 2.4, 6.2,
7.7, 0.4, 4.7, 1.4,
5.1, 9.9, 9.5, 1.5,
6.1, 7.0, 8.5, 4.8), nrow=4, byrow=TRUE)

##
gauss(A,b) # [1] -1.2580645 1.4193548 -0.6129032 0.0000000
solve(A,b) # [1] -1.2580645 1.4193548 -0.6129032 0.0000000
gauss(C,b)
solve(C,b)
